set(EXTERNAL_DIR "External")

set(BUILD_SHARED_LIBS OFF CACHE BOOL "" FORCE)

if(NOT TARGET glad)
    add_subdirectory(glad/cmake)
    if(WIN32)
        glad_add_library(glad STATIC REPRODUCIBLE LOADER API gl:core=4.6 wgl=1.0)
    elseif(UNIX)
        glad_add_library(glad STATIC REPRODUCIBLE LOADER API gl:core=4.6 glx=1.4 egl=1.5)
    endif()
    set_target_properties(glad PROPERTIES FOLDER ${EXTERNAL_DIR}/glad)
endif()

if(NOT TARGET glfw)
    option(GLFW_BUILD_DOCS "" OFF)
    option(GLFW_INSTALL "" OFF)
    option(GLFW_BUILD_WAYLAND "" OFF)
    option(GLFW_BUILD_X11 "" ON)
    add_subdirectory(glfw)
    set_target_properties(glfw PROPERTIES FOLDER ${EXTERNAL_DIR}/glfw)
endif()

if(NOT TARGET glm)
    option(GLM_ENABLE_CXX_20 "" ON)
    add_subdirectory(glm)
    set_target_properties(glm PROPERTIES FOLDER ${EXTERNAL_DIR}/glm)
endif()

if(NOT TARGET spdlog)
    option(SPDLOG_BUILD_EXAMPLE "" OFF)
    option(SPDLOG_INSTALL "" OFF)
    option(SPDLOG_USE_STD_FORMAT "" ON)
    add_subdirectory(spdlog)
    set_target_properties(spdlog PROPERTIES FOLDER ${EXTERNAL_DIR}/spdlog)
endif()

if (NOT TARGET stb)
    add_library(stb INTERFACE)
    target_include_directories(stb INTERFACE stb)
    set_target_properties(stb PROPERTIES FOLDER ${EXTERNAL_DIR}/stb)
endif()

if (NOT TARGET tinygltf)
    option(TINYGLTF_BUILD_LOADER_EXAMPLE "" OFF)
    option(TINYGLTF_INSTALL "" OFF)
    option(TINYGLTF_INSTALL_VENDOR "" OFF)
    add_library(tinygltf INTERFACE)
    target_include_directories(tinygltf INTERFACE tinygltf)
    set_target_properties(tinygltf PROPERTIES FOLDER ${EXTERNAL_DIR}/tinygltf)
    target_compile_definitions(tinygltf INTERFACE TINYGLTF_NOEXCEPTION=1 TINYGLTF_USE_CPP14=1)
endif()
